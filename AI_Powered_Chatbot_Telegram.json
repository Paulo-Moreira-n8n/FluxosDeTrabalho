{
  "name": "AI-Powered Chatbot-Telegram",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message.text }}",
        "options": {
          "systemMessage": "Responda à pergunta utilizando apenas as informações fornecidas nos documentos recuperados da base de dados data_index. Não use conhecimento prévio ou faça suposições. Se a resposta não estiver nos documentos, diga explicitamente que a informação não está disponível.",
          "returnIntermediateSteps": true
        }
      },
      "id": "52987b75-745f-4040-899a-81d5d82af28c",
      "name": "Knowledge Base Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        2780,
        620
      ],
      "typeVersion": 1.9,
      "notes": "Esta é uma Nota"
    },
    {
      "parameters": {},
      "id": "45f2cc44-f323-4cc9-a94a-63202face292",
      "name": "When clicking \"Execute Workflow\"",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        420,
        -60
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=memory_{{ $('Telegram Trigger').item.json.message.from.id }}"
      },
      "id": "9d7fd85d-8d6e-4f45-ad55-54b173554e6f",
      "name": "Simple Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        2880,
        1120
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "data_index",
        "toolDescription": "Recupera documentação",
        "mongoCollection": {
          "__rl": true,
          "value": "colecao",
          "mode": "list",
          "cachedResultName": "colecao"
        },
        "vectorIndexName": "data_index",
        "includeDocumentMetadata": false,
        "options": {}
      },
      "id": "3e412a4d-9abb-43e6-a19e-f9cbd487b4b9",
      "name": "MongoDB Vector Search",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreMongoDBAtlas",
      "position": [
        3040,
        860
      ],
      "typeVersion": 1.1,
      "credentials": {
        "mongoDb": {
          "id": "O9fYsbm84atvhoSK",
          "name": "Autenticação no Serviço do MongoDB Atlas vector database"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.content }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "doc_id",
                "value": "={{ $json.documentId }}"
              }
            ]
          }
        }
      },
      "id": "f2f4d574-a3db-4448-a020-3f0ec6f7eb05",
      "name": "Document Section Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        900,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chunkSize": 3000,
        "chunkOverlap": 200,
        "options": {
          "splitCode": "markdown"
        }
      },
      "id": "69a9a8a6-eb6f-4c0d-b792-d2e3b3719ad5",
      "name": "Document Chunker",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "position": [
        920,
        320
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "mode": "insert",
        "mongoCollection": {
          "__rl": true,
          "value": "colecao",
          "mode": "list",
          "cachedResultName": "colecao"
        },
        "vectorIndexName": "data_index",
        "options": {}
      },
      "id": "658de348-a42c-484c-bce9-1ee07f2c46fc",
      "name": "MongoDB Vector Store Inserter",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreMongoDBAtlas",
      "position": [
        820,
        -60
      ],
      "typeVersion": 1.1,
      "credentials": {
        "mongoDb": {
          "id": "O9fYsbm84atvhoSK",
          "name": "Autenticação no Serviço do MongoDB Atlas vector database"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "documentURL": "https://docs.google.com/document/d/140FkcTAY9bJ4HVCkHjPHuKgFRZgzD-0hOVcm1a-YMeA/edit?tab=t.0#heading=h.1n80nbyitsv0"
      },
      "id": "cc34e78c-09f1-435b-8342-5e839c7318fe",
      "name": "Google Docs Importer",
      "type": "n8n-nodes-base.googleDocs",
      "position": [
        620,
        -60
      ],
      "typeVersion": 2,
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "UFtduJpyXOt8FXsJ",
          "name": "Autenticação na API do Google Documentos"
        }
      }
    },
    {
      "parameters": {
        "content": "## Execute este Workflow manualmente para importar e indexar a documentação do produto a partir do Google Docs no MongoDB com incorporações de vetores para pesquisa rápida.",
        "height": 660,
        "width": 880,
        "color": 5
      },
      "id": "a620999d-f024-4868-abbf-fb15fbbf1b6a",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        340,
        -200
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Este Workflow recebe mensagens do Telegram (texto, áudio, imagem, documentos), converte-as em embeddings, pesquisa no MongoDB e usa a IA Generativa para fornecer respostas sensíveis ao contexto com memória de conversação.",
        "height": 80,
        "width": 2940,
        "color": 4
      },
      "id": "d23e1b51-8958-4f29-bd20-f96dc8a51b3d",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        440,
        520
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Exemplo de Índice de Pesquisa\n```\n{\n  \"mappings\": {\n    \"dynamic\": false,\n    \"fields\": {\n      \"_id\": {\n        \"type\": \"string\"\n      },\n      \"text\": {\n        \"type\": \"string\"\n      },\n      \"embedding\": {\n        \"type\": \"knnVector\",\n        \"dimensions\": 768,\n        \"similarity\": \"cosine\"\n      },\n      \"source\": {\n        \"type\": \"string\"\n      },\n      \"doc_id\": {\n        \"type\": \"string\"\n      }\n    }\n  }\n}\n```",
        "height": 660,
        "width": 340
      },
      "id": "03db8a61-5e75-4994-b90e-b9ff4ea7324c",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1280,
        -200
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "translate",
        "options": {}
      },
      "id": "86a6a4ad-d366-4b9e-9e69-63c24223e647",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        1500,
        820
      ],
      "typeVersion": 1.8,
      "credentials": {
        "openAiApi": {
          "id": "40kIO1MBp35pQ05n",
          "name": "Autenticação na API do OpenAI"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini",
          "cachedResultName": "GPT-4O-MINI"
        },
        "inputType": "base64",
        "options": {
          "detail": "auto"
        }
      },
      "id": "74ef3c7e-cbed-49dc-8c70-4c3b2726479b",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        1500,
        1020
      ],
      "typeVersion": 1.8,
      "credentials": {
        "openAiApi": {
          "id": "40kIO1MBp35pQ05n",
          "name": "Autenticação na API do OpenAI"
        }
      }
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "4a797a19-4c06-414f-90d7-62c2bd723b7e",
      "name": "Extract from PDF",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        2060,
        1380
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "xls",
        "options": {}
      },
      "id": "0573a84b-a64a-40f0-ad9a-0009fd854f24",
      "name": "Extract from XLS",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        2000,
        1580
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "xlsx",
        "binaryPropertyName": "=data",
        "options": {}
      },
      "id": "c1702d9a-f26a-42d4-b187-a9951c803a03",
      "name": "Extract from XLSX",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        2000,
        1740
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "72ae0d20-616a-4a65-9b14-53bf53656091",
              "name": "data",
              "type": "string",
              "value": "={{ $json }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b9068ca0-48ca-46d6-93ea-0ca0bdefe4e5",
      "name": "Map JSON",
      "type": "n8n-nodes-base.set",
      "position": [
        2240,
        1520
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "jsCode": "let requests = $('Route Types').all()\n\nrequests.forEach((request) => {\n  let mime_type = request.json.message.document.mime_type\n\n  if (\n    mime_type === \"text/calendar\" || \n    mime_type === \"application/ics\" || \n    mime_type === \"text/x-calendar\"\n  ) {\n    request.json.message.document.mime_type = \"mapped/calendar\"\n  }\n\n  if (\n    mime_type === \"application/xml\" || \n    mime_type === \"text/xml\") {\n    request.json.message.document.mime_type = \"mapped/xml\"\n  }\n\n  if (!mime_type) {\n    request.json.message.document.mime_type = $('Route Types').first().json.message.document.mime_type\n  }\n})\n\nreturn requests;"
      },
      "id": "d0e9f335-bc6f-4186-bfce-ea10032fc84f",
      "name": "Map file extensions",
      "type": "n8n-nodes-base.code",
      "position": [
        1280,
        1540
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "da68bcca-a2a6-4676-8649-6fb1b664e44c",
              "name": "text",
              "type": "string",
              "value": "=Parsed text: {{ $json.text || $json.data || $json }}\n\nCaption text: {{ $json.info.Title }}\n\nMimeType: {{ $('Telegram Trigger').item.json.message.document.mime_type }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3ab7b204-748f-4eda-aaa8-a06d738a9aca",
      "name": "Map document prompt",
      "type": "n8n-nodes-base.set",
      "position": [
        2440,
        1020
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "48af2dcc-4ce9-45fc-abfc-54f803930092",
              "name": "text",
              "type": "string",
              "value": "=User image description: {{ $json.content }}\n\nUser image caption: {{ $('Route Types').item.json.messages[0].image.caption }}"
            }
          ]
        },
        "options": {}
      },
      "id": "278ce8dd-9dfe-47a0-9fb9-0dbfc7ff04c0",
      "name": "Map image prompt",
      "type": "n8n-nodes-base.set",
      "position": [
        1720,
        1020
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "38aec976-a32c-4b0e-85f4-c90adc16abc9",
              "name": "text",
              "type": "string",
              "value": "={{ $json.message.text }}"
            }
          ]
        },
        "options": {}
      },
      "id": "896d88a8-7581-4b4b-8430-42fbe3c8ba45",
      "name": "Map text prompt",
      "type": "n8n-nodes-base.set",
      "position": [
        520,
        1240
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "resource": "media",
        "operation": "mediaUrlGet",
        "mediaGetId": "={{ $json.messages[0].audio.id}}"
      },
      "id": "a4a3aa2c-01a3-42cf-8e47-8ddfac8e9a0c",
      "name": "Gets WhatsApp Voicemail Source URL",
      "type": "n8n-nodes-base.whatsApp",
      "position": [
        660,
        1720
      ],
      "webhookId": "bbe62f3d-8788-49d4-aae6-9e9411446d44",
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "id": "c9bbc909-8311-4f8e-b35b-e2f898698127",
      "name": "Download Voicemail",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1280,
        700
      ],
      "typeVersion": 4.2,
      "credentials": {
        "httpHeaderAuth": {
          "id": "1UPpASNHeZ9l0lxi",
          "name": "Autenticação no Serviço do  Ghost Genius LinkedIn"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "id": "702e7672-9022-4ad2-8d54-7d361b007cc7",
      "name": "Download Image",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1260,
        900
      ],
      "typeVersion": 4.2,
      "credentials": {
        "httpHeaderAuth": {
          "id": "1UPpASNHeZ9l0lxi",
          "name": "Autenticação no Serviço do  Ghost Genius LinkedIn"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://api.telegram.org/file/bot7410772580:AAH_jzSf4Gtca6FoC46bXPK-N-M62JC1riQ/{{ $json.result.file_path }}",
        "options": {
          "response": {
            "response": {}
          }
        }
      },
      "id": "b93f5409-883d-4781-ba2b-876dbdb165bd",
      "name": "Download Document",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1260,
        1380
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "2fc5c912-629b-4cbe-b5e3-7e3f0651c628",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "text"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "26a3d85c-0815-48ff-85ce-713129a1107c",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.message.voice }}",
                    "rightValue": "audio"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Audio"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "840b95b8-6559-4fb7-b32c-651451d6d0d2",
                    "operator": {
                      "type": "array",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.message.photo }}",
                    "rightValue": "image"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Image"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "3e7a07f9-b785-450c-8c68-f6b276838503",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.message.document }}",
                    "rightValue": "document"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Document"
            }
          ]
        },
        "options": {}
      },
      "id": "53097dd8-890f-49eb-95a6-794111742aed",
      "name": "Route Types",
      "type": "n8n-nodes-base.switch",
      "position": [
        660,
        640
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "14e23243-cd44-4cb1-99bd-9e6905d511ad",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.document.mime_type }}",
                    "rightValue": "text/csv"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CSV"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "6d7616c5-6bdd-47b7-923e-639491d15a4e",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.document.mime_type }}",
                    "rightValue": "text/html"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "HTML"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "a2174e02-378a-41ff-b269-61f4fc3f1de9",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.document.mime_type }}",
                    "rightValue": "=mapped/calendar"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Calendar"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "f3b406d7-362d-473e-8edd-c3e5f2d9c44c",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.document.mime_type }}",
                    "rightValue": "text/rtf"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "RTF"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "64dd4658-54e7-4453-adbc-7067dffcd555",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.document.mime_type }}",
                    "rightValue": "text/plain"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "TXT"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "7540a3ab-b48e-4bec-94e9-a5dfc3d65a4c",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.document.mime_type }}",
                    "rightValue": "mapped/xml"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "XML"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "88b618fd-9a88-491e-91dd-c5fc9efa36e3",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.document.mime_type }}",
                    "rightValue": "application/pdf"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PDF"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "9c4d90aa-b4ea-4a63-b15e-666899c8360e",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.document.mime_type }}",
                    "rightValue": "application/json"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "JSON"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "9baa7c88-3950-4099-8498-99a4640b95e7",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.document.mime_type }}",
                    "rightValue": "application/vnd.ms-excel"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "XLS"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "b83e540c-ba1e-42d0-ac83-f675e25e6aea",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.document.mime_type }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "XLSX"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "ea3be820-2ead-4ec2-b292-42d3c7804b55",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.document.mime_type }}",
                    "rightValue": ""
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ELSE"
            }
          ]
        },
        "options": {}
      },
      "id": "99cad17b-bb19-41f9-b95f-db7013c8ed8c",
      "name": "Route Document Types",
      "type": "n8n-nodes-base.switch",
      "position": [
        1720,
        1180
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "677680658761861",
        "recipientPhoneNumber": "={{ $('WhatsApp Trigger').item.json.messages[0].from }}",
        "textBody": "=The File type you provided is unsupported.",
        "additionalFields": {}
      },
      "id": "5c1eff24-0ddf-4db2-9f56-267dffdbb0c1",
      "name": "Send Unsupported Response",
      "type": "n8n-nodes-base.whatsApp",
      "position": [
        960,
        1780
      ],
      "webhookId": "017d267f-4897-4726-bf03-304ef10352bf",
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# AI-Powered Chatbot = Para texto, voz, imagens e PDF com RAG\n\n## Para quem é este modelo?\nEste modelo foi desenvolvido para equipes de suporte interno, especialistas em produtos e gerentes de conhecimento em empresas de tecnologia que desejam automatizar a ingestão de documentação de produtos e permitir respostas a perguntas via Telegram, orientadas por IA e com recuperação aumentada.\n\n## Qual problema este fluxo de trabalho está resolvendo?\nOs agentes de suporte frequentemente gastam muito tempo pesquisando manualmente em documentação extensa, resultando em respostas inconsistentes ou demoradas. Esta solução automatiza a importação, a fragmentação e a indexação de manuais de produtos e, em seguida, utiliza a geração de recuperação aumentada (RAG) para responder às consultas dos usuários com precisão e rapidez com IA via mensagens do Telegram.\n\n## O que este Workflow faz\n### Fluxo 1: Ingestão e Indexação de Documentos\n- Acionado manualmente para importar a documentação do produto do Google Docs.\n- Divide automaticamente documentos grandes em blocos para uma pesquisa eficiente.\n- Gera embeddings vetoriais para cada bloco usando Google embeddings.\n- Insere os blocos e metadados incorporados em um repositório vetorial do MongoDB Atlas, permitindo uma pesquisa semântica rápida.\n\n### Fluxo 2: Consulta e Resposta com Tecnologia de IA via Telegram\n- Escuta mensagens recebidas de usuários do Telegram, suportando vários tipos:\n. Mensagens de texto: Consultas em texto simples dos usuários.\n. Mensagens de áudio: Anotações de voz transcritas em texto para processamento.\n. Mensagens de imagem: Fotos ou capturas de tela analisadas para fornecer respostas contextuais.\n. Mensagens de documentos: PDFs, planilhas ou outros arquivos analisados ​​em busca de conteúdo relevante.\n- Converte consultas recebidas em embeddings vetoriais e realiza busca por similaridade no repositório de vetores do MongoDB.\n- Utiliza um modelo de IA com geração aumentada de recuperação para produzir respostas concisas e sensíveis ao contexto.\n- Mantém o contexto da conversa em vários turnos usando um nó de buffer de memória.\n- Roteia diferentes tipos de mensagens para nós de processamento apropriados para maximizar a qualidade das respostas.\n\n## Configuração\n### Configurando embeddings vetoriais\n1. Autenticar no Google Docs e conectar a URL do Google Docs que contém a documentação do produto que você deseja indexar.\n2. Autenticar no MongoDB Atlas e conectar a coleção onde deseja armazenar os embeddings de vetores. Crie um índice de pesquisa nessa coleção para suportar consultas de similaridade de vetores.\n3. Certifique-se de que o nome do índice corresponda ao configurado no n8n (data_index).\n4. Consulte o modelo de índice de pesquisa do MongoDB no exemplo a direita para referência.\n\n### Configurando o chat\n1. Autentique o nó do Telegram com as credenciais da sua conta para habilitar o recebimento e o envio de mensagens.\n2. Conecte a coleção do MongoDB que contém a documentação do produto incorporada ao nó de Pesquisa de Vetores do MongoDB usado para consultas de similaridade.\n3. Configure o prompt do sistema no nó do Agente da Base de Conhecimento para refletir o tom da sua empresa, o estilo de resposta e quaisquer regras de negócios, garantindo que ele faça referência à coleção do MongoDB conectada para recuperação de contexto.\n\n## Certifique-se de que\nAmbos os nós do MongoDB (nos fluxos de ingestão e bate-papo) estejam conectados à mesma coleção com:\n- Um campo de Embedding armazenando dados vetoriais,\n- Campos de metadados relevantes (por exemplo, ID do documento, fonte) e\n- O mesmo nome de índice vetorial configurado (por exemplo, data_index).\n\n\n",
        "height": 1620,
        "width": 780,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -520,
        520
      ],
      "typeVersion": 1,
      "id": "d9e6c38e-40e3-4766-8965-22752d6174d6",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "modelName": "models/embedding-001"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "typeVersion": 1,
      "position": [
        760,
        160
      ],
      "id": "a6e03086-453f-45bb-91a6-5751d638a9d2",
      "name": "Embeddings Google Gemini",
      "credentials": {
        "googlePalmApi": {
          "id": "EVqxTZ0KYqoDbpl9",
          "name": "Autenticação na API do Google Gemini"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        460,
        660
      ],
      "id": "67fe6976-e6b0-43fb-a902-dfae7cbe9085",
      "name": "Telegram Trigger",
      "webhookId": "296c8ade-70a2-4a86-a478-59d5aa5d5716",
      "credentials": {
        "telegramApi": {
          "id": "AR5vmJbsdVzLGu0m",
          "name": "Autenticação na API do Telegram- BoTelegram"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.document.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1060,
        1220
      ],
      "id": "e1207da2-d199-4b02-a44a-6c34120d8142",
      "name": "Telegram Document",
      "webhookId": "0804b826-20d3-48a2-a778-84e7f45e9775",
      "credentials": {
        "telegramApi": {
          "id": "AR5vmJbsdVzLGu0m",
          "name": "Autenticação na API do Telegram- BoTelegram"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-1.5-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        2740,
        860
      ],
      "id": "9ab75c02-f867-4a9c-aad0-4ccb050609db",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "EVqxTZ0KYqoDbpl9",
          "name": "Autenticação na API do Google Gemini"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/embedding-001"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "typeVersion": 1,
      "position": [
        3120,
        1020
      ],
      "id": "81614bd8-dc85-4380-8da1-5583f5a51554",
      "name": "Embeddings Google Gemini1",
      "credentials": {
        "googlePalmApi": {
          "id": "EVqxTZ0KYqoDbpl9",
          "name": "Autenticação na API do Google Gemini"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3140,
        620
      ],
      "id": "fb829209-0f93-43b2-9e58-fb39f8cc05d8",
      "name": "Telegram",
      "webhookId": "c691b8db-b492-4399-82aa-87d821497011",
      "credentials": {
        "telegramApi": {
          "id": "AR5vmJbsdVzLGu0m",
          "name": "Autenticação na API do Telegram- BoTelegram"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1060,
        820
      ],
      "id": "9a982573-d817-4afc-b5ba-5cd4984c5258",
      "name": "Telegram Voice",
      "webhookId": "e74d5990-c121-483e-aaa3-131d3ca4acf7",
      "credentials": {
        "telegramApi": {
          "id": "AR5vmJbsdVzLGu0m",
          "name": "Autenticação na API do Telegram- BoTelegram"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.document.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1060,
        1020
      ],
      "id": "81335da4-68e8-4022-9f0d-f428405047a7",
      "name": "Telegram Image",
      "webhookId": "13a82959-59fe-4f3d-be1f-daf30938ca21",
      "credentials": {
        "telegramApi": {
          "id": "AR5vmJbsdVzLGu0m",
          "name": "Autenticação na API do Telegram- BoTelegram"
        }
      }
    },
    {
      "parameters": {
        "resource": "media",
        "operation": "mediaUrlGet",
        "mediaGetId": "={{ $json.messages[0].image.id }}"
      },
      "id": "a3bf2370-621b-4a22-af64-8d7651dc9f8c",
      "name": "Gets WhatsApp Image Source URL",
      "type": "n8n-nodes-base.whatsApp",
      "position": [
        420,
        1760
      ],
      "webhookId": "c2982df4-1d8d-4669-a724-44ae17d11e6c",
      "typeVersion": 1
    }
  ],
  "pinData": {
    "Telegram Trigger": [
      {
        "json": {
          "update_id": 280922392,
          "message": {
            "message_id": 36,
            "from": {
              "id": 6896361930,
              "is_bot": false,
              "first_name": "Paulo",
              "last_name": "Moreira",
              "language_code": "pt-br"
            },
            "chat": {
              "id": 6896361930,
              "first_name": "Paulo",
              "last_name": "Moreira",
              "type": "private"
            },
            "date": 1750783615,
            "text": "Perguntas Frequentes"
          }
        }
      }
    ]
  },
  "connections": {
    "OpenAI": {
      "main": [
        [
          {
            "node": "Knowledge Base Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "Map image prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Map JSON": {
      "main": [
        [
          {
            "node": "Map document prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Route Types": {
      "main": [
        [
          {
            "node": "Knowledge Base Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram Voice",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram Image",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram Document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        []
      ]
    },
    "Download Image": {
      "main": [
        []
      ]
    },
    "Map text prompt": {
      "main": [
        []
      ]
    },
    "Document Chunker": {
      "ai_textSplitter": [
        [
          {
            "node": "Document Section Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Extract from PDF": {
      "main": [
        [
          {
            "node": "Map document prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from XLS": {
      "main": [
        [
          {
            "node": "Map JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Map image prompt": {
      "main": [
        [
          {
            "node": "Knowledge Base Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Document": {
      "main": [
        []
      ]
    },
    "Extract from XLSX": {
      "main": [
        [
          {
            "node": "Map JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Voicemail": {
      "main": [
        []
      ]
    },
    "Map document prompt": {
      "main": [
        [
          {
            "node": "Knowledge Base Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Map file extensions": {
      "main": [
        []
      ]
    },
    "Google Docs Importer": {
      "main": [
        [
          {
            "node": "MongoDB Vector Store Inserter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Knowledge Base Agent": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Route Document Types": {
      "main": [
        [
          {
            "node": "Map document prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Map document prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Map document prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Map document prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Map document prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Map document prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from PDF",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Map JSON",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from XLS",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from XLSX",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "MongoDB Vector Search": {
      "ai_tool": [
        [
          {
            "node": "Knowledge Base Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Document Section Loader": {
      "ai_document": [
        [
          {
            "node": "MongoDB Vector Store Inserter",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "When clicking \"Execute Workflow\"": {
      "main": [
        [
          {
            "node": "Google Docs Importer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gets WhatsApp Voicemail Source URL": {
      "main": [
        []
      ]
    },
    "Embeddings Google Gemini": {
      "ai_embedding": [
        [
          {
            "node": "MongoDB Vector Store Inserter",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Route Types",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Document": {
      "main": [
        [
          {
            "node": "Route Document Types",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Knowledge Base Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Google Gemini1": {
      "ai_embedding": [
        [
          {
            "node": "MongoDB Vector Search",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Voice": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gets WhatsApp Image Source URL": {
      "main": [
        []
      ]
    },
    "Telegram Image": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "0831717e-8cdd-42eb-a851-32b91f6434b0",
  "meta": {
    "instanceId": "f8fb8b7c9f227cabfd3532e55a910625bd5265edfac26d35ea7f1663405904ec"
  },
  "id": "3xYdMHVYtlmeRT4S",
  "tags": []
}